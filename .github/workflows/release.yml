name: Release Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  Create Release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Compile TypeScript with Webpack
        run: |
          npx webpack --mode production

      - name: Bump Version
        id: bump_version
        run: |
          current_version=$(node -p "require('./package.json').version")
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

          jq ".version = \"$new_version\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Generate Changelog
        run: |
          changelog="CHANGELOG.md"
          new_entry="## [${{ env.new_version }}]\n"
          new_commits=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 @^)..@)

          echo -e "# Change Log\n\n$new_entry\n$new_commits\n\n$(cat $changelog)" > $changelog

          echo "Generated Changelog:"
          cat $changelog

      - name: Commit Version Bump & Changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json CHANGELOG.md
          git commit -m "Bump version to ${{ env.new_version }} and update Changelog"
          git push

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.new_version }}"
          release_name: "Release v${{ env.new_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and Publish Extension
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          npx vsce package
          npx vsce publish
