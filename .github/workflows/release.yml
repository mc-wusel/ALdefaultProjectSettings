name: Release Pipeline

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint_compile_bump_version_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: |
          npm install

      - name: Compile TypeScript
        run: |
          npx tsc -p ./

      - name: Read Current Version
        id: read_version
        run: |
          if [ -f package.json ]; then
            current_version=$(node -p "require('./package.json').version")
          else
            echo "0.0.0" > VERSION
            current_version="0.0.0"
          fi
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Bump Version
        id: bump_version
        run: |
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

          # Update the version in package.json
          jq ".version = \"$new_version\"" package.json > package.tmp.json
          mv package.tmp.json package.json

      - name: Commit Version Bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "Bump version to ${{ env.new_version }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main

      - name: Create Git Tag
        run: |
          git tag "v${{ env.new_version }}"
          git push origin "v${{ env.new_version }}"

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.new_version }}"
          release_name: "Release v${{ env.new_version }}"
          draft: false
          prerelease: false

      - name: Package and Publish Extension
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          npx vsce package
          npx vsce publish
